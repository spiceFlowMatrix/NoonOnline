version: 2.1

jobs:
  build-job:
    docker:
      - image: circleci/node:7.10
    steps:
      - checkout
      - run: sudo npm cache clean -f
      - run: sudo npm install -g n
      - run: sudo n stable
      - run: node -v
      - run: npm -v
      - run: sudo npm install --unsafe-perm -g @angular/cli
      - run: npm install
      - run: npm run build::staging
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - Caddyfile
            - Dockerfile
  deploy-job:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: workspace
      - run: find .
      - run:
          name: Set up Google cloud SDK. Important to set up cluster based on deployment
          command: |
            echo $GCLOUD_SERVICE_KEY > gcloud-service-key.json
            gcloud auth activate-service-account --key-file gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_STAGING_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Tag docker image to GCR registry
          command: |
            docker build -t sales-application:${CIRCLE_SHA1} ./workspace
            docker tag sales-application:${CIRCLE_SHA1} eu.gcr.io/${GOOGLE_PROJECT_ID}/sales-application:${CIRCLE_SHA1}
      - run:
          name: Push image to GRC & update k8s
          command: |
            gcloud auth configure-docker
            docker push eu.gcr.io/${GOOGLE_PROJECT_ID}/sales-application:${CIRCLE_SHA1}
            kubectl patch deployment sales-application-staging -p '{"spec":{"template":{"spec":{"containers":[{"name":"sales-application","image":"eu.gcr.io/'"$GOOGLE_PROJECT_ID"'/sales-application:'"$CIRCLE_SHA1"'"}]}}}}'
            kubectl rollout status deployment/sales-application-staging
            kubectl get pods
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build-job
      - deploy-job:
          requires:
          - build-job