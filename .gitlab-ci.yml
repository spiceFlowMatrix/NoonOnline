image: openjdk:8-jdk

stages:
  - build

variables:
  ANDROID_COMPILE_SDK: '29'
  ANDROID_BUILD_TOOLS: '29.0.2'
  ANDROID_SDK_TOOLS: '4333796'

before_script:
  - cd AndroidApp
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  - touch local.properties
  - rm app/google-services.json
  - echo ${ANDROID_GOOGLE_SERVICES_JSON} | base64 -d > app/google-services.json
  - echo ${ANDROID_SSL_CRT_RAW} | base64 -d > app/src/main/res/raw/noonssl.crt
  - echo ${ANDROID_CONFIG_STRINGS} | base64 -d > app/src/staging/res/values/strings.xml

lint:
  stage: build
  script:
    - ./gradlew -Pci --console=plain :app:lintRelease -PbuildDir=lint
  artifacts:
    paths:
      - AndroidApp/app/lint/
      - AndroidApp/android-file-chooser/lint/
      - AndroidApp/giraffeplayer2/lint/
      - AndroidApp/prdownloader/lint/
    expire_in: 1 day # TODO: Change expiry to be permanent once script is good for operational use.
    when: on_failure

assemble:
  stage: build
  script:
    - ./gradlew assembleRelease
  artifacts:
    paths:
      - AndroidApp/app/build/outputs/
    expire_in: 1 day # TODO: Change expiry to be permanent once script is good for operational use.
