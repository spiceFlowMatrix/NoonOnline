// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trainning24.Domain.Entity;

namespace Trainning24.Domain.Migrations
{
    [DbContext(typeof(Training24Context))]
    [Migration("20200603145712_versioncode_appversion_tbl_03062020")]
    partial class versioncode_appversion_tbl_03062020
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Trainning24.Domain.Entity.AddtionalServices", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<string>("Price");

                    b.HasKey("Id");

                    b.ToTable("AddtionalServices");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Homework", Price = "0" },
                        new { Id = 2L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Discussion", Price = "0" },
                        new { Id = 3L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Library", Price = "0" },
                        new { Id = 4L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Parental Control", Price = "0" }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AgentCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<int>("Commission");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("AgentCategory");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AnswerFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AnswerId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("AnswerFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AppTimeTrack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivityTime");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Grade");

                    b.Property<string>("HardwarePlatform");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Isp");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("NetworkSpeed");

                    b.Property<string>("OperatingSystem");

                    b.Property<string>("Outtime");

                    b.Property<string>("School");

                    b.Property<string>("ServiceProvider");

                    b.Property<string>("SubjectsTaken");

                    b.Property<long>("UserId");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.ToTable("AppTimeTracks");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AppVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsForceUpdate");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Version");

                    b.Property<string>("VersionCode");

                    b.HasKey("Id");

                    b.ToTable("AppVersion");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, IsForceUpdate = false, Version = "1.0", VersionCode = "1" }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Assignment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AssignmentFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssignmentId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("AssignmentFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AssignmentStudent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssignmentId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool>("IsApproved");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("AssignmentStudent");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AssignmentSubmission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssignmentId");

                    b.Property<string>("Comment");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool>("IsApproved");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsSubmission");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Remark");

                    b.Property<long>("Score");

                    b.Property<long>("TeacherId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AssignmentSubmissions");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AssignmentSubmissionFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("SubmissionId");

                    b.HasKey("Id");

                    b.ToTable("AssignmentSubmissionFiles");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Books", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("BookPublisher");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<long>("FileId");

                    b.Property<string>("GradeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsPublished");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("PublishedTime");

                    b.Property<int?>("PublisherUserId");

                    b.Property<string>("Subject");

                    b.Property<string>("Title");

                    b.Property<long>("coverimage");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Buckets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BucketName");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("Buckets");

                    b.HasData(
                        new { Id = 1L, BucketName = "core-api-sql-migrations", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 2L, BucketName = "edg-primary-course-image-storage", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 3L, BucketName = "edg-primary-profile-image-storage", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 4L, BucketName = "edg-sales-primary-storage", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 5L, BucketName = "eu.artifacts.training24-197210.appspot.com", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 6L, BucketName = "t24-app-builds", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 7L, BucketName = "t24-primary-audio-storage", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 8L, BucketName = "t24-primary-image-storage", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 9L, BucketName = "t24-primary-pdf-storage", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 10L, BucketName = "t24-primary-video-storage", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 11L, BucketName = "t24-secure-files", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Bundle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Bundle");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.BundleCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BundleId");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("BundleCourse");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Chapter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<long?>("QuizId");

                    b.HasKey("Id");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.ChapterProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("Progress");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ChapterProgresses");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.ChapterQuiz", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("QuizId");

                    b.HasKey("Id");

                    b.ToTable("chapterQuiz");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryCode");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<decimal?>("PassMark");

                    b.Property<bool>("istrial");

                    b.HasKey("Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.CourseDefination", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BasePrice");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("GradeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("CourseDefination");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.CourseGrade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("Gradeid");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("CourseGrade");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.CourseItemProgressSync", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<long>("IsStatus");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("Lessonid");

                    b.Property<long>("Lessonprogress");

                    b.Property<long>("Quizid");

                    b.Property<long>("Userid");

                    b.HasKey("Id");

                    b.ToTable("CourseItemProgressSync");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("abbreviation");

                    b.Property<string>("currency");

                    b.Property<string>("symbol");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DefaultValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<int>("intervals");

                    b.Property<bool>("istimeouton");

                    b.Property<int>("reminder");

                    b.Property<int>("timeout");

                    b.HasKey("Id");

                    b.ToTable("DefaultValues");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, intervals = 3, istimeouton = true, reminder = 5, timeout = 15 }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Deposit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<decimal>("DepositAmount");

                    b.Property<string>("DepositDate");

                    b.Property<string>("DocumentIds");

                    b.Property<bool>("IsConfirm");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsRevoke");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("SalesAgentId");

                    b.HasKey("Id");

                    b.ToTable("Deposit");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DeviceOS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("DeviceId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.ToTable("DeviceOS");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DeviceQuotaExtensionRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApprovedOn");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("RejectedOn");

                    b.Property<long>("RequestedLimit");

                    b.Property<string>("RequestedOn");

                    b.Property<string>("Status");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("DeviceQuotaExtensionRequests");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DeviceQuotas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<int>("DeviceLimit");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("DeviceQuotas");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Devices", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("DeviceToken");

                    b.Property<string>("IpAddress");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("MacAddress");

                    b.Property<string>("ModelName");

                    b.Property<string>("ModelNumber");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DeviceTags", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("DeviceId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DeviceTags");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Discount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<int>("FreeSubscriptions");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<int>("OffSubscriptions");

                    b.Property<int>("OffTotalPrice");

                    b.Property<string>("PackageName");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DiscussionCommentFiles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CommentId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Duration");

                    b.Property<string>("FileName");

                    b.Property<long>("FileSize");

                    b.Property<long>("FileTypeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("TotalPages");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("DiscussionCommentFiles");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DiscussionCommentLikes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CommentId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool>("DisLike");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<bool>("Like");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("DiscussionCommentLikes");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DiscussionComments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("TopicId");

                    b.HasKey("Id");

                    b.ToTable("DiscussionComments");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DiscussionFiles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("Duration");

                    b.Property<string>("FileName");

                    b.Property<long>("FileSize");

                    b.Property<long>("FileTypeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<long?>("TopicId");

                    b.Property<int>("TotalPages");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("DiscussionFiles");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DiscussionTopic", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsPrivate");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("DiscussionTopic");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DiscussionTopicLikes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool>("DisLike");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<bool>("Like");

                    b.Property<long>("TopicId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("DiscussionTopicLikes");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.DocumentDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("DocumentUrl");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("DocumentDetails");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.ERPAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountCode");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("ERPAccounts");

                    b.HasData(
                        new { Id = 1L, AccountCode = "", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Type = 1 },
                        new { Id = 2L, AccountCode = "", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Type = 2 },
                        new { Id = 3L, AccountCode = "", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Type = 3 },
                        new { Id = 4L, AccountCode = "", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Type = 4 },
                        new { Id = 5L, AccountCode = "", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Type = 5 }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeebackTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<long>("FeedbackId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Time");

                    b.HasKey("Id");

                    b.ToTable("FeebackTime");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CategoryId");

                    b.Property<long>("ChapterId");

                    b.Property<long>("Contactid");

                    b.Property<long>("Coordinator");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<long>("GradeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<long>("QaUser");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedBackActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FeedbackId");

                    b.Property<long>("FeedbackTaskId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("Type");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("FeedBackActivity");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedBackCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("FeedBackCategory");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedbackFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FeedtimeId");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("FeedbackFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedBackStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FeedBackId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsManager");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("Type");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("FeedBackStaff");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedBackTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<long>("FeedbackId");

                    b.Property<string>("FileLink");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("Type");

                    b.HasKey("Id");

                    b.ToTable("FeedBackTask");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedBackTaskStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FeedbackId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("Status");

                    b.HasKey("Id");

                    b.ToTable("FeedBackTaskStatus");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedBackTaskStatusOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FeedBackTaskStatusOption");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "UnApproved" },
                        new { Id = 2L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Approved" },
                        new { Id = 3L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Completed" }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FileProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<long>("Progress");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("FileProgresses");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Files", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("Duration");

                    b.Property<string>("FileName");

                    b.Property<long>("FileSize");

                    b.Property<long>("FileTypeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("TotalPages");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FileTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Filetype");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("FileTypes");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "PDF", IsDeleted = false },
                        new { Id = 2L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "Video", IsDeleted = false },
                        new { Id = 3L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "Image", IsDeleted = false },
                        new { Id = 4L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "Zip", IsDeleted = false },
                        new { Id = 5L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "Audio", IsDeleted = false },
                        new { Id = 6L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "Xlsx", IsDeleted = false },
                        new { Id = 7L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "Docs", IsDeleted = false },
                        new { Id = 8L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Filetype = "PPT", IsDeleted = false }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<long>("SchoolId");

                    b.HasKey("Id");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.IndividualDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityId");

                    b.Property<string>("CountryId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<string>("CurrentAddress");

                    b.Property<string>("DateOfBirth");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("FatherNumber");

                    b.Property<long?>("GradeId");

                    b.Property<string>("IdCardNumber");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("MaritalStatusId");

                    b.Property<string>("Nationality");

                    b.Property<string>("ParentTazrika");

                    b.Property<string>("PassportNumber");

                    b.Property<string>("PermanentAddress");

                    b.Property<string>("Phone");

                    b.Property<string>("PlaceOfBirth");

                    b.Property<string>("PreviousMarksheets");

                    b.Property<string>("ProvinceId");

                    b.Property<string>("RefferedBy");

                    b.Property<string>("Remarks");

                    b.Property<string>("SchoolName");

                    b.Property<string>("SexId");

                    b.Property<string>("SocialMediaAccount");

                    b.Property<string>("SoicalMediaLinked");

                    b.Property<string>("StudentCode");

                    b.Property<string>("StudentName");

                    b.Property<string>("StudentTazkira");

                    b.Property<long?>("UserId");

                    b.Property<string>("Village");

                    b.HasKey("Id");

                    b.ToTable("IndividualDetails");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Lesson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ChapterId");

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LessonAssignment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("LessonAssignments");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LessonAssignmentFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssignmentId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("LessonAssignmentFiles");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LessonAssignmentSubmission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssignmentId");

                    b.Property<string>("Comment");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool>("IsApproved");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsSubmission");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Remark");

                    b.Property<long>("Score");

                    b.Property<long>("TeacherId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("LessonAssignmentSubmissions");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LessonAssignmentSubmissionFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("SubmissionId");

                    b.HasKey("Id");

                    b.ToTable("LessonAssignmentSubmissionFiles");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LessonFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessionId");

                    b.HasKey("Id");

                    b.ToTable("LessonFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LessonProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<long>("Progress");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("LessonProgresses");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LogObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ActionUserId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("EntityKey");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("TimeStamp");

                    b.Property<long>("TypeId");

                    b.HasKey("Id");

                    b.ToTable("LogObjects");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LogObjectTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("EntityType");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("LogObjectTypes");

                    b.HasData(
                        new { Id = 1L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Course", IsDeleted = false },
                        new { Id = 2L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Course", IsDeleted = false },
                        new { Id = 3L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Course", IsDeleted = false },
                        new { Id = 4L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "User", IsDeleted = false },
                        new { Id = 5L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "User", IsDeleted = false },
                        new { Id = 6L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "User", IsDeleted = false },
                        new { Id = 7L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Chapter", IsDeleted = false },
                        new { Id = 8L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Chapter", IsDeleted = false },
                        new { Id = 9L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Chapter", IsDeleted = false },
                        new { Id = 10L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Lesson", IsDeleted = false },
                        new { Id = 11L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Lesson", IsDeleted = false },
                        new { Id = 12L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Lesson", IsDeleted = false },
                        new { Id = 13L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Quiz", IsDeleted = false },
                        new { Id = 14L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Quiz", IsDeleted = false },
                        new { Id = 15L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Quiz", IsDeleted = false },
                        new { Id = 16L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Question", IsDeleted = false },
                        new { Id = 17L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Question", IsDeleted = false },
                        new { Id = 18L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Question", IsDeleted = false },
                        new { Id = 19L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "File", IsDeleted = false },
                        new { Id = 20L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "File", IsDeleted = false },
                        new { Id = 21L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "File", IsDeleted = false },
                        new { Id = 22L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Notification", IsDeleted = false },
                        new { Id = 23L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Notification", IsDeleted = false },
                        new { Id = 24L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Notification", IsDeleted = false },
                        new { Id = 25L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Discussion", IsDeleted = false },
                        new { Id = 26L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Discussion", IsDeleted = false },
                        new { Id = 27L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Discussion", IsDeleted = false },
                        new { Id = 28L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Comment", IsDeleted = false },
                        new { Id = 29L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Comment", IsDeleted = false },
                        new { Id = 30L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Comment", IsDeleted = false },
                        new { Id = 31L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "DiscussionFile", IsDeleted = false },
                        new { Id = 32L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "DiscussionFile", IsDeleted = false },
                        new { Id = 33L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "DiscussionFile", IsDeleted = false },
                        new { Id = 34L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "CommentFile", IsDeleted = false },
                        new { Id = 35L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "CommentFile", IsDeleted = false },
                        new { Id = 36L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "CommentFile", IsDeleted = false },
                        new { Id = 37L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "AddtionalServices", IsDeleted = false },
                        new { Id = 38L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "AddtionalServices", IsDeleted = false },
                        new { Id = 39L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "AddtionalServices", IsDeleted = false },
                        new { Id = 40L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Package", IsDeleted = false },
                        new { Id = 41L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Package", IsDeleted = false },
                        new { Id = 42L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "Package", IsDeleted = false },
                        new { Id = 43L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "PackageCourse", IsDeleted = false },
                        new { Id = 44L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "PackageCourse", IsDeleted = false },
                        new { Id = 45L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "PackageCourse", IsDeleted = false },
                        new { Id = 46L, Action = "Create", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "BookAdd", IsDeleted = false },
                        new { Id = 47L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "BookUpdate", IsDeleted = false },
                        new { Id = 48L, Action = "Delete", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "BookDelete", IsDeleted = false },
                        new { Id = 49L, Action = "Update", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, EntityType = "BookPublish", IsDeleted = false }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Logs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<string>("Data");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("TestColumn");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.ManagementInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("individual_receipt_notes");

                    b.Property<string>("noon_background");

                    b.Property<string>("sales_partner_dari");

                    b.Property<string>("sales_partner_eng");

                    b.Property<string>("school_receipt_notes");

                    b.HasKey("Id");

                    b.ToTable("ManagementInfo");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.MetaDataDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("DetailId");

                    b.Property<int>("DetailTypeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("MetadataId");

                    b.HasKey("Id");

                    b.ToTable("MetaDataDetail");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.NotificationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsRead");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LogObjectId");

                    b.Property<long>("NotifiedUserId");

                    b.HasKey("Id");

                    b.ToTable("NotificationLogs");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Package", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<string>("Price");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.PackageCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("PackageId");

                    b.HasKey("Id");

                    b.ToTable("PackageCourses");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.ProgessSync", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<long?>("GradeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsStatus");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long?>("LessonId");

                    b.Property<decimal?>("LessonProgress");

                    b.Property<long?>("LessonProgressId");

                    b.Property<long?>("QuizId");

                    b.Property<long?>("TotalRecords");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ProgessSync");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.ProgressStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("ProgressStatus");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.PurchagePdf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("PdfFile");

                    b.Property<string>("PurchageId");

                    b.HasKey("Id");

                    b.ToTable("PurchagePdf");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.PurchageUpload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("PdfFile");

                    b.Property<string>("PurchageId");

                    b.HasKey("Id");

                    b.ToTable("PurchageUpload");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Explanation")
                        .HasMaxLength(255);

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsMultiAnswer");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long>("QuestionTypeId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("ExtraText")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCorrect");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("QuestionId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionAnswer");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("QuestionId");

                    b.HasKey("Id");

                    b.ToTable("QuestionFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("QuestionType");

                    b.HasData(
                        new { Id = 1L, Code = "MCQ", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 2L, Code = "SA", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 3L, Code = "nonmcq", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false },
                        new { Id = 4L, Code = "abc", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Quiz", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("NumQuestions");

                    b.Property<decimal>("PassMark");

                    b.Property<int>("TimeOut");

                    b.HasKey("Id");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuizProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("Progress");

                    b.Property<long>("QuizId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("QuizProgresses");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuizQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("QuestionId");

                    b.Property<long>("QuizId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizQuestion");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuizSummary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Attempts");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<int>("QSummary");

                    b.Property<long>("QuizId");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("QuizSummary");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuizTimerSync", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<bool>("isStatus");

                    b.Property<string>("passingScore");

                    b.Property<long>("quizId");

                    b.Property<string>("quizTime");

                    b.Property<long>("userId");

                    b.Property<string>("yourScore");

                    b.HasKey("Id");

                    b.ToTable("QuizTimerSync");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<string>("RoleKey");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Administrator", RoleKey = "admin" },
                        new { Id = 2L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Analyst", RoleKey = "analyst" },
                        new { Id = 3L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Teacher", RoleKey = "teacher" },
                        new { Id = 4L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Student", RoleKey = "student" },
                        new { Id = 5L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Customer", RoleKey = "customer" },
                        new { Id = 6L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "AAF manager", RoleKey = "aaf_manager" },
                        new { Id = 7L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Coordinator", RoleKey = "coordinator" },
                        new { Id = 8L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Edit team leader", RoleKey = "edit_team_leader" },
                        new { Id = 9L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Shooting team leader", RoleKey = "shooting_team_leader" },
                        new { Id = 10L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Graphics team leader", RoleKey = "graphics_team_leader" },
                        new { Id = 11L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Quality assurance", RoleKey = "quality_assurance" },
                        new { Id = 12L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Feedback edge team", RoleKey = "feedback_edge_team" },
                        new { Id = 13L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Sales admin", RoleKey = "sales_admin" },
                        new { Id = 14L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Filming staff", RoleKey = "filming_staff" },
                        new { Id = 15L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Editing staff", RoleKey = "editing_staff" },
                        new { Id = 16L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Graphics staff", RoleKey = "graphics_staff" },
                        new { Id = 17L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Sales Agent", RoleKey = "sales_agent" },
                        new { Id = 18L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Parent", RoleKey = "parent" }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.SalesAgent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AgentCategoryId");

                    b.Property<string>("AgentName");

                    b.Property<int>("AgreedMonthlyDeposit");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<string>("CurrencyCode");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("FocalPoint");

                    b.Property<bool>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("PartnerBackgroud");

                    b.Property<string>("Phone");

                    b.Property<string>("PhysicalAddress");

                    b.Property<string>("Position");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("SalesAgent");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.SalesTax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<int>("Tax");

                    b.HasKey("Id");

                    b.ToTable("SalesTax");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, Tax = 4 }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("School");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.SchoolDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuildingOwnershipId");

                    b.Property<string>("Computers");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Dongles");

                    b.Property<string>("InternetAccessId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Monitors");

                    b.Property<int>("NumberOfStaffFemale");

                    b.Property<int>("NumberOfStaffMale");

                    b.Property<int>("NumberOfStudentFemale");

                    b.Property<int>("NumberOfStudentMale");

                    b.Property<int>("NumberOfTeacherFemale");

                    b.Property<int>("NumberOfTeacherMale");

                    b.Property<string>("PowerAddressId");

                    b.Property<string>("RegisterNumber");

                    b.Property<string>("RegisterationPaper");

                    b.Property<string>("Routers");

                    b.Property<string>("SchoolAddress");

                    b.Property<string>("SchoolLicense");

                    b.Property<string>("SchoolName");

                    b.Property<string>("SchoolTypeId");

                    b.Property<string>("SectionTypeId");

                    b.HasKey("Id");

                    b.ToTable("SchoolDetails");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentChapterProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<long>("ChapterStatus");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentChapterProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentCourseProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<decimal>("CourseProgress");

                    b.Property<long>("CourseStatus");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentCourseProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentLessonProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("Duration");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<decimal>("LessonProgress");

                    b.Property<long>("LessonStatus");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentLessonProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<long>("ChapterStatus");

                    b.Property<long>("CourseId");

                    b.Property<decimal>("CourseProgress");

                    b.Property<long>("CourseStatus");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<long>("LessonStatus");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudParent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("ParentId");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudParents");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.SubscriptionMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("DiscountPackageId");

                    b.Property<string>("EnrollmentFromDate");

                    b.Property<string>("EnrollmentToDate");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<int>("NoOfMonths");

                    b.Property<long>("PackageId");

                    b.Property<string>("PurchageId");

                    b.Property<long>("SalesAgentId");

                    b.Property<string>("ServiceId");

                    b.Property<string>("Status");

                    b.Property<int>("SubscriptionTypeId");

                    b.Property<int>("Tax");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionMetadata");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Subscriptions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("SubscriptionMetadataId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.TaskActivityCategoryFeedBack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TaskActivityCategoryFeedBacks");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "In Queue" },
                        new { Id = 2L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "In Progress" },
                        new { Id = 3L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Completed" },
                        new { Id = 4L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Archived" }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.TaskActivityFeedBack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("TaskId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("TaskActivityFeedBacks");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.TaskCategoryFeedBack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TaskCategoryFeedBacks");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Something Isn't Working in the App" },
                        new { Id = 2L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Video Issue" },
                        new { Id = 3L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Text Issue" },
                        new { Id = 4L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Lesson Assignment Issue" },
                        new { Id = 5L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Chapter Assignment Issue" },
                        new { Id = 6L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "Quiz Issue" },
                        new { Id = 7L, CreationTime = "03-06-2020 02:57:12 PM", CreatorUserId = 1, IsDeleted = false, Name = "General Feedback" }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.TaskFeedBack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppVersion");

                    b.Property<string>("ArchivedDate");

                    b.Property<long>("Assign");

                    b.Property<long>("CategoryId");

                    b.Property<long?>("ChapterId");

                    b.Property<string>("ComplatedDate");

                    b.Property<long?>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("Device");

                    b.Property<long?>("GradeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long?>("LessonId");

                    b.Property<string>("OperatingSystem");

                    b.Property<string>("StartDate");

                    b.Property<int>("Status");

                    b.Property<string>("Time");

                    b.Property<string>("Title");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.ToTable("TaskFeedBacks");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.TaskFileFeedBack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("TaskId");

                    b.HasKey("Id");

                    b.ToTable("TaskFileFeedBacks");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.TermsAndConditions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Terms");

                    b.HasKey("Id");

                    b.ToTable("TermsAndConditions");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.TimeInterval", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<int>("Interval");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("TimeIntervals");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Interval = 5, IsDeleted = false }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthId");

                    b.Property<string>("Bio");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<bool>("IsBlocked");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Password");

                    b.Property<string>("ProfilePicUrl");

                    b.Property<string>("Username");

                    b.Property<string>("forgotkey");

                    b.Property<int>("intervals");

                    b.Property<bool>("is_assignment_authorized");

                    b.Property<bool>("is_discussion_authorized");

                    b.Property<bool>("is_library_authorized");

                    b.Property<bool>("is_skippable");

                    b.Property<bool>("isallowmap");

                    b.Property<bool>("isfirstlogin");

                    b.Property<bool>("isforgot");

                    b.Property<bool>("istimeouton");

                    b.Property<bool>("istrial");

                    b.Property<string>("phonenumber");

                    b.Property<int>("reminder");

                    b.Property<int>("timeout");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1L, AuthId = "auth0|5ea05a1a8c1d6e0c0c607177", Bio = "Admin", CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, Email = "adminuser@email.com", FullName = "Admin", IsBlocked = false, IsDeleted = false, Password = "", ProfilePicUrl = "", Username = "Admin", intervals = 0, is_assignment_authorized = false, is_discussion_authorized = false, is_library_authorized = false, is_skippable = true, isallowmap = false, isfirstlogin = false, isforgot = false, istimeouton = false, istrial = false, reminder = 0, timeout = 0 }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("EndDate");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool?>("IsExpire");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("StartDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserCourse");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserNotifications", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("AssignmentId");

                    b.Property<long?>("ChapterId");

                    b.Property<long?>("CommentId");

                    b.Property<long?>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long?>("DiscussionId");

                    b.Property<long?>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsRead");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long?>("LessionId");

                    b.Property<long?>("QuizId");

                    b.Property<string>("Tag");

                    b.Property<int>("Type");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserQuizResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AnsweredQuestion");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("PassingScore");

                    b.Property<string>("PerformDate");

                    b.Property<long>("QuizId");

                    b.Property<long>("Score");

                    b.Property<long>("TotalQuestion");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserQuizResults");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("RoleId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new { Id = 1L, CreationTime = "03-06-2020 08:27:12 PM", CreatorUserId = 1, IsDeleted = false, RoleId = 1L, UserId = 1L }
                    );
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserSessions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessToken");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("DeviceToken");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(10);

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("UserId");

                    b.Property<string>("Version")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Question", b =>
                {
                    b.HasOne("Trainning24.Domain.Entity.QuestionType", "QuestionType")
                        .WithMany()
                        .HasForeignKey("QuestionTypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionAnswer", b =>
                {
                    b.HasOne("Trainning24.Domain.Entity.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuizQuestion", b =>
                {
                    b.HasOne("Trainning24.Domain.Entity.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Trainning24.Domain.Entity.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
