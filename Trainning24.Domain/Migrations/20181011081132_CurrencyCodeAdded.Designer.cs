// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trainning24.Domain.Entity;

namespace Trainning24.Domain.Migrations
{
    [DbContext(typeof(Training24Context))]
    [Migration("20181011081132_CurrencyCodeAdded")]
    partial class CurrencyCodeAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Trainning24.Domain.Entity.AgentCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<int>("Commission");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("AgentCategory");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AnswerFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AnswerId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("AnswerFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Assignment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AssignmentFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssignmentId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("AssignmentFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.AssignmentStudent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AssignmentId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("StudentId");

                    b.Property<long>("TeacherId");

                    b.HasKey("Id");

                    b.ToTable("AssignmentStudent");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Bundle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Bundle");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.BundleCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BundleId");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("BundleCourse");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Chapter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<long?>("QuizId");

                    b.HasKey("Id");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryCode");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<decimal?>("PassMark");

                    b.HasKey("Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.CourseDefination", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BasePrice");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("GradeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("CourseDefination");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.CourseGrade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("Gradeid");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("CourseGrade");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("abbreviation");

                    b.Property<string>("currency");

                    b.Property<string>("symbol");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Discount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<int>("FreeSubscriptions");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<int>("OffSubscriptions");

                    b.Property<int>("OffTotalPrice");

                    b.Property<string>("PackageName");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeebackTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<long>("FeedbackId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Time");

                    b.HasKey("Id");

                    b.ToTable("FeebackTime");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CategoryId");

                    b.Property<long>("ChapterId");

                    b.Property<long>("Contactid");

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<long>("GradeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedBackCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("FeedBackCategory");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FeedbackFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FeedtimeId");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("FeedbackFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Files", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("Duration");

                    b.Property<string>("FileName");

                    b.Property<long>("FileSize");

                    b.Property<long>("FileTypeId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("TotalPages");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.FileTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Filetype");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("FileTypes");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Lesson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ChapterId");

                    b.Property<string>("Code");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.LessonFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessionId");

                    b.HasKey("Id");

                    b.ToTable("LessonFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.ProgressStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("ProgressStatus");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Explanation")
                        .HasMaxLength(255);

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool>("IsMultiAnswer");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long>("QuestionTypeId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("ExtraText")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCorrect");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("QuestionId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionAnswer");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("FileId");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("QuestionId");

                    b.HasKey("Id");

                    b.ToTable("QuestionFile");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("QuestionType");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Quiz", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int>("ItemOrder");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("NumQuestions");

                    b.Property<decimal>("PassMark");

                    b.Property<int>("TimeOut");

                    b.HasKey("Id");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuizQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("QuestionId");

                    b.Property<long>("QuizId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizQuestion");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.SalesAgent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AgentCategoryId");

                    b.Property<string>("AgentName");

                    b.Property<int>("AgreedMonthlyDeposit");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<long>("CurrencyCode");

                    b.Property<long>("CurrencyId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("FocalPoint");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("PartnerBackgroud");

                    b.Property<string>("Phone");

                    b.Property<string>("PhysicalAddress");

                    b.Property<string>("Position");

                    b.HasKey("Id");

                    b.ToTable("SalesAgent");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentChapterProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<long>("ChapterStatus");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentChapterProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentCourseProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<decimal>("CourseProgress");

                    b.Property<long>("CourseStatus");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentCourseProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentLessonProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("Duration");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<decimal>("LessonProgress");

                    b.Property<long>("LessonStatus");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentLessonProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.StudentProgress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChapterId");

                    b.Property<long>("ChapterStatus");

                    b.Property<long>("CourseId");

                    b.Property<decimal>("CourseProgress");

                    b.Property<long>("CourseStatus");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("LessonId");

                    b.Property<long>("LessonStatus");

                    b.Property<long>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("StudentProgress");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.SubscriptionMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<long>("DiscountPackageId");

                    b.Property<string>("EnrollmentFromDate");

                    b.Property<string>("EnrollmentToDate");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("SalesAgentId");

                    b.Property<int>("SubscriptionTypeId");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionMetadata");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Subscriptions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Status");

                    b.Property<long>("SubscriptionMetadataId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bio");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("Password");

                    b.Property<string>("ProfilePicUrl");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CourseId");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("EndDate");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("StartDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserCourse");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("RoleId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.UserSessions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessToken");

                    b.Property<string>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<int?>("DeleterUserId");

                    b.Property<string>("DeletionTime");

                    b.Property<string>("DeviceToken");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(10);

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<long>("UserId");

                    b.Property<string>("Version")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.Question", b =>
                {
                    b.HasOne("Trainning24.Domain.Entity.QuestionType", "QuestionType")
                        .WithMany()
                        .HasForeignKey("QuestionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuestionAnswer", b =>
                {
                    b.HasOne("Trainning24.Domain.Entity.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Trainning24.Domain.Entity.QuizQuestion", b =>
                {
                    b.HasOne("Trainning24.Domain.Entity.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Trainning24.Domain.Entity.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
